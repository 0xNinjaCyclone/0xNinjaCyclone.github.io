<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>0xNinjaCyclone Blog</title>
    <link>https://0xninjacyclone.github.io/</link>
    <description>Recent content on 0xNinjaCyclone Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>elsharifabdallah53@gmail.com (Abdallah Mohamed)</managingEditor>
    <webMaster>elsharifabdallah53@gmail.com (Abdallah Mohamed)</webMaster>
    <lastBuildDate>Mon, 04 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://0xninjacyclone.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Exploit development] 8- Buffer Over-Read Attacks and Developing a Real Exploit</title>
      <link>https://0xninjacyclone.github.io/posts/exploitdev_8_bor/</link>
      <pubDate>Mon, 04 Mar 2024 00:00:00 +0000</pubDate><author>elsharifabdallah53@gmail.com (Abdallah Mohamed)</author>
      <guid>https://0xninjacyclone.github.io/posts/exploitdev_8_bor/</guid>
      <description>Intro Welcome to the eighth part of the series on discovering binary application vulnerabilities and developing appropriate exploits. In the previous part, we talked about string format vulnerabilities and how to exploit them in several ways, including leaking sensitive information from private memory. In this part, we will continue to discuss more attacks of this type. We will discuss how to discover these types of vulnerabilities and exploit them optimally. Also, we will apply it to a famous vulnerability that was discovered before.</description>
    </item>
    <item>
      <title>[Exploit development] 7- How to do magic with string format bugs</title>
      <link>https://0xninjacyclone.github.io/posts/exploitdev_7_strfmt/</link>
      <pubDate>Thu, 08 Feb 2024 00:00:00 +0000</pubDate><author>elsharifabdallah53@gmail.com (Abdallah Mohamed)</author>
      <guid>https://0xninjacyclone.github.io/posts/exploitdev_7_strfmt/</guid>
      <description>Intro Welcome everyone, to the seventh part of the exploit development series. In this article, we will discuss the string format vulnerability and the scientific and programming concepts behind it. This will lead us to answer many questions, such as why it occurs and how to make the most of it and exploit it optimally.&#xA;In the beginning, I would like to say that this type of vulnerabilities has become very rare to occur, but the concepts that you will learn will definitely benefit you, increase your skills as an exploit developer, and improve your way of thinking and methodology.</description>
    </item>
    <item>
      <title>[Exploit development] 6- Dealing with ELF files programmatically</title>
      <link>https://0xninjacyclone.github.io/posts/exploitdev_6_elf/</link>
      <pubDate>Fri, 05 Jan 2024 00:00:00 +0000</pubDate><author>elsharifabdallah53@gmail.com (Abdallah Mohamed)</author>
      <guid>https://0xninjacyclone.github.io/posts/exploitdev_6_elf/</guid>
      <description>Intro Welcome to our third part in the exploration of executable binary files. This article delves into the structure of ELF files, exploring the critical information they contain and how to programmatically interact with them. As previously mentioned, while the PE format is vital for cybersecurity specialists, especially the specializations emerging from reverse engineering, our focus here is on comprehending the ELF format which is also important. First, you had better read the first part, which is an important theoretical overview of executable binary files, then read the second part, which offers a practical in-depth exploration of Windows PE files, and a lot of base concepts we&amp;rsquo;re gonna use have been explained in that part.</description>
    </item>
    <item>
      <title>[Exploit development] 5- Dealing with Windows PE files programmatically</title>
      <link>https://0xninjacyclone.github.io/posts/exploitdev_5_winpe/</link>
      <pubDate>Sun, 31 Dec 2023 00:00:00 +0000</pubDate><author>elsharifabdallah53@gmail.com (Abdallah Mohamed)</author>
      <guid>https://0xninjacyclone.github.io/posts/exploitdev_5_winpe/</guid>
      <description>Intro Welcome to our in-depth exploration of Windows PE files. Understanding the PE format is crucial for cybersecurity professionals, as it provides insight into the architecture and functioning of Windows executables. In this article, we delve into parsing PE files programmatically, a skill essential for analyzing and exploiting software vulnerabilities. Although we won&amp;rsquo;t examine every detail of the PE format, we&amp;rsquo;ll focus on the most pertinent aspects that are essential for cybersecurity experts.</description>
    </item>
    <item>
      <title>[Exploit development] 4- Understanding Binary Files</title>
      <link>https://0xninjacyclone.github.io/posts/exploitdev_4_binfiles/</link>
      <pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate><author>elsharifabdallah53@gmail.com (Abdallah Mohamed)</author>
      <guid>https://0xninjacyclone.github.io/posts/exploitdev_4_binfiles/</guid>
      <description>Intro Hello everyone, I hope you&amp;rsquo;re all well. In this article, we&amp;rsquo;re going to talk about binary files. We&amp;rsquo;ll look at how they are built, what they contain, their structure, and the information contained within each part. the importance of this information, the role of each piece of information, and how we can read and understand it using specialized tools. Understanding the architecture of binary files is vital for reverse engineering and the process of debugging and analyzing the software to determine what it does so you can break it.</description>
    </item>
    <item>
      <title>[Exploit development] 3- Understanding Heap Memory</title>
      <link>https://0xninjacyclone.github.io/posts/exploitdev_3_heap/</link>
      <pubDate>Sun, 17 Dec 2023 00:00:00 +0000</pubDate><author>elsharifabdallah53@gmail.com (Abdallah Mohamed)</author>
      <guid>https://0xninjacyclone.github.io/posts/exploitdev_3_heap/</guid>
      <description>Intro Hello everyone, hope you&amp;rsquo;re all well. In this article, we&amp;rsquo;re going to talk about heap memory. We&amp;rsquo;ll look at what it is, how it works, and why software uses it. I&amp;rsquo;ll explain the heap&amp;rsquo;s special functions (APIs) and what happens in the background when software uses these functions. Let&amp;rsquo;s get started and learn more about heap memory!&#xA;What is Heap? The heap is a contiguous large region of memory that is subdivided into chunks to be dynamically allocated and deallocated at run time as needed.</description>
    </item>
    <item>
      <title>[Exploit development] 2- Understanding Stack Memory</title>
      <link>https://0xninjacyclone.github.io/posts/exploitdev_2_stack/</link>
      <pubDate>Wed, 13 Dec 2023 00:00:00 +0000</pubDate><author>elsharifabdallah53@gmail.com (Abdallah Mohamed)</author>
      <guid>https://0xninjacyclone.github.io/posts/exploitdev_2_stack/</guid>
      <description>Intro Hello everyone, I hope you are doing well. In this article, we will discuss the stack, how it works. and the operations performed on it. Understanding the stack will pave the way for us in the exploit development field and other fields like malware development.&#xA;What is Stack? The stack is a temporary memory that behaves as a first-in-last-out buffer, divided into a group of frames on top of each other.</description>
    </item>
    <item>
      <title>[Exploit development] 1- Intro</title>
      <link>https://0xninjacyclone.github.io/posts/exploitdev_1_intro/</link>
      <pubDate>Tue, 12 Dec 2023 00:00:00 +0000</pubDate><author>elsharifabdallah53@gmail.com (Abdallah Mohamed)</author>
      <guid>https://0xninjacyclone.github.io/posts/exploitdev_1_intro/</guid>
      <description>Intro Hello everyone, I hope you are doing well, In this article we will cover some subjects like what is exploit development or binary exploitation we will take a step back and cover the meaning of software. Also, what are the prerequisites to get into this field?&#xA;What is software? Software is a set of instructions, data, or programs used to operate computers and execute specific tasks.&#xA;Any software mainly takes input, does some processing, and then export output, The input may be taken from the user or another software, Additionally, the output may be exported to the user or another software for recycling.</description>
    </item>
    <item>
      <title>About</title>
      <link>https://0xninjacyclone.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>elsharifabdallah53@gmail.com (Abdallah Mohamed)</author>
      <guid>https://0xninjacyclone.github.io/about/</guid>
      <description>About me My name is Abdallah Mohamed, studing computer science as a self study&#xA;I&amp;rsquo;m generally interested in cybersecurity, specificaly in offensive part&#xA;Also i really like to read/develop security tools.&#xA;Sec tools i developed WRock is a multi web security purposes tool hellMaker is a backdoors generator with advanced evasions PowerLoad3r is a malicious powershell scripts loader designed to avoid detection and a lot more, you can check out my github.</description>
    </item>
  </channel>
</rss>
